version: '3.8'

services:
  # PHP-FPM service for Laravel 11
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel11_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    environment:
      - DB_HOST=database
      - DB_DATABASE=${DB_DATABASE:-laravel_db}
      - DB_USERNAME=${DB_USERNAME:-laravel_user}
      - DB_PASSWORD=${DB_PASSWORD:-laravel_password}
      - REDIS_HOST=redis
      - CACHE_DRIVER=${CACHE_DRIVER:-redis}
      - SESSION_DRIVER=${SESSION_DRIVER:-redis}
      - QUEUE_CONNECTION=${QUEUE_CONNECTION:-redis}
    networks:
      - laravel_network
    depends_on:
      - database
      - redis

  # Nginx web server
  webserver:
    image: nginx:1.25-alpine
    container_name: laravel11_webserver
    restart: unless-stopped
    ports:
      - "5152:80"
      # - "443:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    networks:
      - laravel_network
    depends_on:
      - app

  # MySQL 8.0 database
  # database:
  #   image: mysql:8.0
  #   container_name: laravel11_database
  #   restart: unless-stopped
  #   environment:
  #     MYSQL_DATABASE: laravel_db
  #     MYSQL_ROOT_PASSWORD: root_password
  #     MYSQL_USER: laravel_user
  #     MYSQL_PASSWORD: laravel_password
  #   ports:
  #     - "3306:3306"
  #   volumes:
  #     - db_data:/var/lib/mysql
  #     - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
  #   command: --default-authentication-plugin=mysql_native_password --init-file=/docker-entrypoint-initdb.d/init.sql
  #   networks:
  #     - laravel_network
  database:
    image: postgres:15-alpine
    container_name: laravel11_database
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE:-laravel_db}
      POSTGRES_USER: ${DB_USERNAME:-laravel_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-laravel_password}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - laravel_network
    #command: postgres -c max_connections=200 -c shared_buffers=256MB -c work_mem=64MB -c effective_cache_size=512MB
  # Redis for caching, sessions, and queues
  redis:
    image: redis:7.2-alpine
    container_name: laravel11_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - laravel_network

  # Node.js for Vite (Laravel's frontend build tool)
  node:
    image: node:20-alpine
    container_name: laravel11_node
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    ports:
      - "5173:5173"  # Vite dev server
    command: sh -c "npm install && npm run dev"
    networks:
      - laravel_network

  # Queue worker
  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel11_queue
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    command: php artisan queue:work --verbose --tries=3 --timeout=90
    environment:
      DB_HOST: database
      DB_DATABASE: ${DB_DATABASE:-laravel_db}
      DB_USERNAME: ${DB_USERNAME:-laravel_user}
      DB_PASSWORD: ${DB_PASSWORD:-laravel_password}
      REDIS_HOST: ${REDIS_HOST:-redis}
    networks:
      - laravel_network
    depends_on:
      - database
      - redis

  # Scheduler (Laravel Cron)
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel11_scheduler
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    command: sh -c "while true; do php artisan schedule:run --verbose --no-interaction & sleep 60; done"
    environment:
      - DB_HOST=database
      - DB_DATABASE=${DB_DATABASE:-laravel_db}
      - DB_USERNAME=${DB_USERNAME:-laravel_user}
      - DB_PASSWORD=${DB_PASSWORD:-laravel_password}
      - REDIS_HOST=redis
    networks:
      - laravel_network
    depends_on:
      - database
      - redis

  # Mailpit for email testing
  mailpit:
    image: axllent/mailpit:latest
    container_name: laravel11_mailpit
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - laravel_network

  # MinIO for S3-compatible object storage
  minio:
    image: minio/minio:latest
    container_name: laravel11_minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-laraveladmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-laravelpassword}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - laravel_network

networks:
  laravel_network:
    driver: bridge

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local